### Exercise 9 - Quantum Information and Computing 2020/2021 ###

## 1D Ising Model with transverse field ##
The aim of this program is to compute the Hamiltonian of the 1D Ising model in matrix form:
     H = lambda * SUM(P_z^i) + SUM(P_x^i P_x^(i+1))
where P_z and P_x denotes the Pauli matrices.


# Files description: #
- Ex9-Guadagnini-SpinsHamiltonian-CODE.f90 : 
    contains the module that defines the subroutines to read the configuration file, compute and diagonalize the hamiltonian, and print the results.
    In details:
        *  Type(Parameters)     : it defines the derived type "parameters" with: N, k, Lambda, Debug
        *  InitParamsFromFile   : it reads from a configuration file the parameters and stores them all together in a variable of type "parameters".
        *  Ham_Zsum             : it computes the hamiltonian term constituted by the sum over the P_z^i
        *  Ham_Xsum             : it computes the interaction term of the hamiltonian
        *  SymmetricEigenpairs  : subroutine that diagonalize the hamiltonian 
        *  PrintEigVals         : it writes in file the first k eigenvalues with the lambda value. It creates a different file for every N value.
    
- Ex9-Guadagnini-Debugger-CODE.f90 :
    contains the module "Debugger" that defines two subroutines to be used in the program.
    *  InitDebugger: it prints a message stating that debugging is active and explaining its usage;
    *  Checkpoint  : it prints a message when called only if the logical flag "Debug" is .TRUE.;
    *  CatchError  : called when something goes wrong, it prints a message on screen. If it is a fatal error it prints the message also on a file and stops the execution.
    
- Ex9-Guadagnini-CODE.f90 : 
    contains the main program that reads the parameters from the configuration file "Config_Pars.txt".
    Then it calls the subroutines and functions to complete the task. It is divided into three main parts: 
    * read configuration to set the parameters and the debug flag;
    * compute the hamiltonian
    * diagonilize the hamiltonian
    
- Config_Pars.txt :
    contains the input parameters values:
    * NN     : number of spin particles
    * kk     : number of eigenvalues to store
    * Lambda : field strenght value
    * Debug  : debug logical flag
    
- Ex9-Guadagnini-Script-CODE.py :
    Python script that runs the program over different values of the parameters:
    * NN     : [2:12]
    * kk     : 8
    * Lambda : [0:30] with 31 points (step = 0.1)
    It also save the average computation time for each NN value in the file "Timings.txt".
    
- Ex9-Guadagnini-TimingsPlot.gnuplot :
    gnuplot script to generate the plot & fit of the computed execution times (Timings.pdf, fit.log)
    
- Ex9-Guadagnini-LevelsPlot.gnuplot :
    gnuplot script that creates all the pictures in the folder Plots (see description of Plots folder below).
    
    
# Folders description: #   
- Data :
    contains all the data computed by the program. Data are separated on files according to the value of NN.
    * first column is lambda, the others are the eigenvalues from 0 to 7.
    
- Plots :
    contains the plot generated by the gnuplot scripts. There are two types of plots:
    * EigVals_k*.pdf : they reports the same eigenvalues for different N in function of lambda (example: EigVals_k00.pdf contains the ground states).
    * EigVals_N*.pdf : they reports the eigenvalues for the indicated N.

    
# Compile instructions: #
To compile the program use :
    gfortran *CODE.f90 -o Ising1D.x -lblas -llapack -g -fcheck=all -Wall -Wconversion-extra
    
# Execute instructions: #
- FORTRAN:
    To run, change the program parameters in the file "Config_Pars.txt". The order of the parameters is arbitrary. Then use :
        ./Ising1D.x
        
- PYTHON:
    To run the python script use :
        python Ex9-Guadagnini-Script-CODE.py 
        
- GNUPLOT:
     gnuplot Ex9-Guadagnini-TimingsPlot.gnuplot 
     
     gnuplot Ex9-Guadagnini-LevelsPlot.gnuplot 
