### Exercise 10 - Quantum Information and Computing 2020/2021 ###

## 1D Ising Model with transverse field - Renormalization Group Solution ##
The aim of this program is to compute the ground state energy density of the 1D Ising model of hamiltonian:
     H = lambda * SUM(P_z^i) + SUM(P_x^i P_x^(i+1))
where P_z and P_x denotes the Pauli matrices, by mean of the Real Space Renormalization Group method.


# Files description: #
- Ex10-Guadagnini-RSRG-CODE.f90 : 
    contains the module that defines the subroutines to read the configuration file, compute the hamiltonian, print the results.
    In details:
        *  Type(Parameters)     : it defines the derived type "parameters" with: N, TruncN, Lambda, ExitTh, MaxItr, kk, Debug (see description of file "Config_Pars.txt" below for explanation)
        *  InitParamsFromFile   : it reads from a configuration file the parameters and stores them all together in a variable of type "parameters".
        *  Ham_Zsum             : it computes the hamiltonian term constituted by the sum over the P_z^i
        *  Ham_Xsum             : it computes the interaction term of the hamiltonian
        *  PrintEigVals         : it writes in file the first k eigenvalues with the lambda value. It creates a different file for every N or TruncN value and saves also the last iteration index.
    It also contains the functions for useful mathematical operations:
        *  AbsDiff              : it computes the absolute difference between 2 numbers
        *  d_kron               : it is the kronecker delta function
        *  PauliMat             : returns the Pauli Matrix specified in the argument
        *  DIdentity            : it returns the identity matrix of the specified size
        *  kronProduct          : it computes the kronecker product of 2 matrices
        *  Projection           : it project the second passed matrix using the first passed one
        *  SymmetricEigenpairs  : subroutine that diagonalize the hamiltonian 
    
- Ex10-Guadagnini-Debugger-CODE.f90 :
    contains the module "Debugger" that defines two subroutines to be used in the program.
    *  InitDebugger: it prints a message stating that debugging is active and explaining its usage;
    *  Checkpoint  : it prints a message when called only if the logical flag "Debug" is .TRUE.;
    *  CatchError  : called with a condition to be verified; if the condition is .TRUE. it prints a message on screen. If it is a fatal error it prints the message also on a file and stops the execution.
    
- Ex10-Guadagnini-CODE.f90 : 
    contains the main program that reads the parameters from the configuration file "Config_Pars.txt".
    Then it calls the subroutines and functions to complete the task. It is divided into four main parts: 
    * read configuration to set the parameters and the debug flag;
    * compute the initial hamiltonian
    * loop over RSRG steps
    * save the results
    
- Config_Pars.txt :
    contains the input parameters values:
    * NN     : number of spin particles
    * TruncN : log2 of the matrix size after projection (must be < NN)
    * Lambda : field strenght value
    * ExitTh : threshold for the eigenvalue improvement: if the improvement is lower than this threshold, stop the iterations
    * MaxItr : maximum number of iterations
    * kk     : number of eigenvalues to store
    * Debug  : debug logical flag
    
- Ex10-Guadagnini-Script-CODE.py :
    Python script that runs the program over different values of the parameters:
    NN     : [2,4,4,4,6,6,6,8,8,8]
    TruncN : [2,2,3,4,2,3,4,2,3,4]
    Lam_set: [0:3] with 61 points (step = 0.05)
    ExitTh : 5d-16
    MaxItr : 100
    kk     : 1
    It also save the average computation time for each NN and TruncN values in the file "Timings.txt" (average over Lambda iterations).
    
- Ex10-Guadagnini-MeanField.py :
    Python script that computed the mean field solution as a comparison. It stores it in the file: "Data/MeanFieldGS.dat"
    
- Ex10-Guadagnini-GS_Plot.gnuplot :
    gnuplot script that creates all the pictures in the folder Plots (see description of Plots folder below).
    
    
# Folders description: #   
- Data :
    contains all the data computed by the program. Data are separated on files according to the value of NN and TruncN (indicated with T).
        Their columns reports:
        * 1st col : last iteration index
        * 2nd col : number of particles in the system in the last iteration
        * 3rd col : Lambda
        * 4th col : ground state eigenvalue
    It contains also the mean field solution in the file "MeanFieldGS.dat" with 2 columns, Lambda and Eigenvalues
    
- Plots :
    contains the plot generated by the gnuplot scripts. There are two types of plots:
    * GroundStates_*.pdf : they reports data for the same value of the parameter indicated in the name (N or T).
    (example: GroundStates_T3.pdf contains the ground states for all the data obtained with T=3).
    * GS_diff_*.pdf : same as above, but it reports the difference with the mean field solution.

    There is also the plot with all the data printed in one image, "GroundStatesAll.pdf".
    
# Compile instructions: #
To compile the program use :
    gfortran *CODE.f90 -o RGIsing1D.x -lblas -llapack -g -fcheck=all -Wall -Wconversion-extra

    
# Execute instructions: #
- FORTRAN:
    To run, change the program parameters in the file "Config_Pars.txt". The order of the parameters is arbitrary. Then use :
        ./RGIsing1D.x
        
- PYTHON:
    To run the python script use :
        python Ex10-Guadagnini-Script-CODE.py 
    For the MeanField solution use :
        python Ex10-Guadagnini-MeanField-CODE.py 
        
- GNUPLOT:
     gnuplot Ex10-Guadagnini-GS_Plot.gnuplot  
